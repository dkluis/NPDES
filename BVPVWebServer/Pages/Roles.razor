@using FluentValidation
@using BVPVWebServer.Data
@inject RoleService _roleService

@page "/roles"

<PageTitle>Roles</PageTitle>

<MudText Typo="Typo.h4" Align="Align.Center">Role Management</MudText>

<MudItem xs="6">
    <MudCard Outlined="true">
        <MudText Align="Align.Center" Typo="Typo.h4">Add New Role</MudText>
        <MudForm Model="@_role" @ref="@_form" Validation="@(_roleValidator.ValidateValue)" ValidationDelay="0">
            <MudCardContent>
                <MudTextField @bind-Value="_role.RoleId"
                              For="@(() => _role.RoleId)"
                              Immediate="true"
                              Label="Enter Role"/>
                <MudNumericField @bind-Value="_role.RoleLevel"
                                 For="@(() => _role.RoleLevel)"
                                 Immediate="true"
                                 Label="Enter Role Level"/>
                <MudText Style="padding-top: 10px">Is Role ReadOnly Access: </MudText>
                <MudRadioGroup @bind-Selection="_role.ReadOnly"
                               For="@(() => _role.ReadOnly)"
                               Label="Select ReadOnly">
                    <MudRadio Class="pa-2" Option="false" Color="Color.Primary" Dense="true">False</MudRadio>
                    <MudRadio class="pa-2" Option="true" Color="Color.Secondary" Dense="true">True</MudRadio>
                </MudRadioGroup>
            </MudCardContent>
        </MudForm>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" Class="ml-auto" OnClick="@(async () => await Submit())">Submit</MudButton>
        </MudCardActions>
    </MudCard>
</MudItem>

<MudText>@_Init_Info</MudText>

<MudSimpleTable Dense="true" Hover="true" Bordered="true" Striped="true" FixedHeader="true" Style="height: 100px">
    <thead>
        <tr>
            @foreach (var h in headings)
            {
                <th>@h</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var role in _roles)
        {
            <tr>
                <td>@role.RoleId</td>
                <td>@role.RoleLevel</td>
                <td>@role.ReadOnly</td>
            </tr>
        }
    </tbody>
</MudSimpleTable>

@code {
    // Form Handling Code
    MudForm? _form;
    readonly RoleFluentValidator _roleValidator = new RoleFluentValidator();
    readonly Role _role = new Role();

    private async Task Submit()
    {
        await _form!.Validate();
    }

    // Validation Code
    public class RoleFluentValidator : AbstractValidator<Role>
    {
        public RoleFluentValidator()
        {
            RuleFor(x => x.RoleId)
                .NotEmpty()
                .Length(1, 10);

            RuleFor(x => x.RoleLevel)
                .GreaterThan(0)
                .LessThan(100);
        }

        public Func<object, string, Task<IEnumerable<string>>> ValidateValue => async (model, propertyName) =>
        {
            var result = await ValidateAsync(ValidationContext<Role>.CreateWithOptions((Role) model, x => x.IncludeProperties(propertyName)));
            return result.IsValid ? Array.Empty<string>() : result.Errors.Select(e => e.ErrorMessage);
        };
    }
}

@code
{
    // Table Handling Code
    private string _Init_Info;
    private bool _loading;
    private IEnumerable<Role> _roles = new List<Role>();

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        _roles = await _roleService.GetAllRoles();
        _Init_Info = "DEBUGGING Info ---->>>> Async GetAllRoles has returned: " + _roles.Count() + " Records";
        _loading = false;
    }
}

@code {
    string[] headings = { "Role", "Level", "ReadOnly" };
    string[] rows = {
        @"1 Krishna kpartner0@usatoday.com Male 28.25.250.202",
        @"2 Webb wstitle1@ning.com Male 237.168.134.114",
        @"3 Nathanil nneal2@cyberchimps.com Male 92.6.0.175",
        @"4 Adara alockwood3@patch.com Female 182.174.217.152",
        @"5 Cecilius cchaplin4@shinystat.com Male 195.124.144.18",
        @"6 Cicely cemerine9@soup.io Female 138.94.191.43",
    };
}
