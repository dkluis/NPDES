@page "/Roles/{PassedRoleId?}"

@inject ProtectedSessionStorage SessionStore

@using Severity = MudBlazor.Severity
@inject ISnackbar Snackbar

@inject NavigationManager NavMgr
@inject StateService StateService

<PageTitle>Role @PassedRoleId</PageTitle>

@{
    if (!StateService.IsLoggedIn)
    {
        NavMgr.NavigateTo("/");
    }
    else
    {
        if (UserService.CanUserUseApp(StateService.GetAppInfo(), StateService.UserId, "Roles") == false)
        {
            <MudAlert Severity="Severity.Error">User @StateService.UserId cannot use this App based on your Role profile.</MudAlert>
        }
        else
        {
            <h3>RolesEdit</h3>
            <p>>building Role Delete and Role Change(s)</p>
        }
    }
}


@code {

    [Parameter]
    public string? PassedRoleId { get; set; }

}

@code {

    protected override async Task OnInitializedAsync()
    {
        var result = await SessionStore.GetAsync<string>("User");
        if (result.Value is not {Length: > 1 }) NavMgr.NavigateTo("/");
        PassedRoleId ??= "No Role";

        await SessionStore.SetAsync("EntryPage", $"/Roles/{PassedRoleId}");

        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
        Snackbar.Configuration.NewestOnTop = true;
        Snackbar.Configuration.VisibleStateDuration = 5000;
    }

}